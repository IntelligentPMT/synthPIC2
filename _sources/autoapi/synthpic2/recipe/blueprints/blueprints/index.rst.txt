:py:mod:`synthpic2.recipe.blueprints.blueprints`
================================================

.. py:module:: synthpic2.recipe.blueprints.blueprints

.. autoapi-nested-parse::

   Module for blueprints and helper classes.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   synthpic2.recipe.blueprints.blueprints._Blueprint
   synthpic2.recipe.blueprints.blueprints.ParticleBlueprint
   synthpic2.recipe.blueprints.blueprints.MeasurementTechniqueBlueprint
   synthpic2.recipe.blueprints.blueprints._InvokedObject
   synthpic2.recipe.blueprints.blueprints.Particle
   synthpic2.recipe.blueprints.blueprints.MeasurementTechnique




Attributes
~~~~~~~~~~

.. autoapisummary::

   synthpic2.recipe.blueprints.blueprints.Features
   synthpic2.recipe.blueprints.blueprints.Blueprint


.. py:data:: Features

   

.. py:class:: _Blueprint


   Bases: :py:obj:`synthpic2.recipe.registries.SelfRegisteringAttrsMixin`

   Base class for Blueprints.

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: custom_features
      :type: Optional[Features]

      

   .. py:method:: __attrs_post_init__() -> None


   .. py:method:: _gather_feature_subsets() -> List[Union[None, Features, synthpic2.recipe.registries.Registry]]
      :abstractmethod:


   .. py:method:: invoke() -> None
      :abstractmethod:



.. py:class:: ParticleBlueprint


   Bases: :py:obj:`_Blueprint`

   Class to combine a `geometry_prototype` and a `material_prototype` to a
   particle.

   .. py:property:: _registry
      :type: synthpic2.recipe.registries.Registry


   .. py:attribute:: _target_
      :type: str
      :value: 'synthpic2.recipe.blueprints.ParticleBlueprint'

      

   .. py:attribute:: geometry_prototype_name
      :type: str

      

   .. py:attribute:: material_prototype_name
      :type: str
      :value: 'default'

      

   .. py:attribute:: parent
      :type: str
      :value: 'MeasurementVolume'

      

   .. py:attribute:: number
      :type: int

      

   .. py:method:: __attrs_post_init__() -> None


   .. py:method:: _gather_feature_subsets() -> List[Union[None, Features, synthpic2.recipe.registries.Registry]]


   .. py:method:: invoke() -> None

      Create the specified number of particles, according to the blueprint.



.. py:class:: MeasurementTechniqueBlueprint


   Bases: :py:obj:`_Blueprint`

   Class to combine a `measurement_technique_prototype` and a `material_prototype`
   to a particle.

   .. py:property:: _registry
      :type: synthpic2.recipe.registries.Registry


   .. py:attribute:: _target_
      :type: str
      :value: 'synthpic2.recipe.blueprints.MeasurementTechniqueBlueprint'

      

   .. py:attribute:: measurement_technique_prototype_name
      :type: str

      

   .. py:attribute:: measurement_volume_material_prototype_name
      :type: str
      :value: 'vacuum'

      

   .. py:attribute:: background_material_prototype_name
      :type: str
      :value: 'vacuum'

      

   .. py:attribute:: name
      :type: str
      :value: 'MeasurementTechnique'

      

   .. py:attribute:: custom_features
      :type: Optional[Features]

      

   .. py:method:: __attrs_post_init__() -> None


   .. py:method:: _gather_feature_subsets() -> List[Union[None, Features, synthpic2.recipe.registries.Registry]]


   .. py:method:: invoke() -> None

      Load a `measurement_technique_prototype`, assign a
      `measurement_volume_material_prototype` and optionally assign a
      `background_material_prototype`.



.. py:data:: Blueprint

   

.. py:class:: _InvokedObject


   Bases: :py:obj:`synthpic2.recipe.registries.SelfRegisteringAttrsMixin`

   Base class for objects, invoked by a blueprint.

   .. py:property:: blender_object
      :type: bpy.types.Object


   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: blueprint
      :type: Blueprint

      

   .. py:method:: __attrs_post_init__() -> None


   .. py:method:: update_feature_blender_links(renaming_maps: Dict[str, synthpic2.custom_types.RenamingMap]) -> None


   .. py:method:: add_features(features: Optional[Iterable[synthpic2.recipe.prototypes.Feature]]) -> None



.. py:class:: Particle


   Bases: :py:obj:`_InvokedObject`

   Class to represent an object, invoked by a particle blueprint.

   .. py:property:: _registry
      :type: synthpic2.recipe.registries.Registry


   .. py:property:: md5
      :type: str


   .. py:attribute:: blueprint
      :type: ParticleBlueprint

      


.. py:class:: MeasurementTechnique


   Bases: :py:obj:`_InvokedObject`

   Class to store the features of a measurement technique.

   .. py:property:: _registry
      :type: synthpic2.recipe.registries.Registry


   .. py:attribute:: blueprint
      :type: MeasurementTechniqueBlueprint

      

   .. py:method:: __attrs_post_init__() -> None


   .. py:method:: prepare_for_render(rendering_mode: str) -> None


   .. py:method:: assign_material_prototype_to_object(material_prototype: synthpic2.recipe.prototypes.prototypes.MaterialPrototype, object_name: str) -> None



